name: Deploy and Validate Metadata

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  sfdxvalidate:
    name: "Run SFDX Validate"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install SFDX CLI and sfdx-git-delta plugin # Ce package va vous permettre de faire un delta entre votre branche et la branch ciblÃ©. Voici la documentation : https://github.com/scolladon/sfdx-git-delta
        run: |
          npm install -g @salesforce/cli@latest

      - name: Verify Salesforce CLI
        run: sfdx --version

      - name: Install sfdx-git-delta plugin
        run: |
          yes | sfdx plugins:install sfdx-git-delta

      - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
        shell: bash
        run: |
            echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
            secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
            if [ $secretFileSize == 1 ]; then
                echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                exit 1;
            fi

        # Authenticate dev hub
      - name: 'Authenticate Dev Hub'
        run: |
             sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d

      - name: Generate metadata delta using sfdx-git-delta
        run: |
          mkdir -p .temp
          sfdx sgd:source:delta --to "HEAD" --from "origin/main" --output .temp --generate-delta
          
      - name: Deploy metadata to Salesforce
        run: |
     
         sfdx project deploy start -x .temp/package/package.xml -0 devhub --checkonly --ignorewarnings -l RunLocalTests
